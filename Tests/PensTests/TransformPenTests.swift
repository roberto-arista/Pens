import XCTest
import CoreGraphics

@testable import Pens

class TransformTestPen: TransformPen, CustomStringConvertible {
    // Test class that prints PostScript to stdout
    private var commands = [String]()

    override func moveTo(pt: CGPoint) {
        commands.append("\(pt.x) \(pt.y) moveto")
    }
    override func lineTo(pt: CGPoint) {
        commands.append("\(pt.x) \(pt.y) lineto")
    }
    override func curveTo(points: [CGPoint]) {
        commands.append(points.map { "\($0)" }.joined(separator: " ") + "curveto")
    }
    override func qCurveTo(points: [CGPoint?]) {
        commands.append(points.map { String(describing: $0) }.joined(separator: " ") + "qcurveto")
    }
    override func closePath() {
        commands.append("closepath")
    }
    override func endPath() {
        commands.append("endpath")
    }
    var description: String {
        return commands.joined(separator: " ")
    }
}


final class TransformPenTests: XCTestCase {

    func test_something() {
        
    }

}
